apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: null
  name: dnsconnectors.monkale.monkale.io
spec:
  group: monkale.monkale.io
  names:
    kind: DNSConnector
    listKind: DNSConnectorList
    plural: dnsconnectors
    singular: dnsconnector
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Last Change
      jsonPath: .status.conditions[?(@.type=="Ready")].lastTransitionTime
      name: Last Change
      type: string
    - description: The current state
      jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: State
      type: string
    - description: The current state
      jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DNSConnector is the Schema for the dnsconnectors API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DNSConnectorSpec defines the desired state of DNSConnector
            properties:
              corednsCM:
                description: corednsCM is the name of the CoreDNS ConfigMap.
                properties:
                  corefileKey:
                    default: Corefile
                    description: corefileKey specifies the key whose value is the
                      Corefile. Typically, this key is "Corefile". The default value
                      is "Corefile"
                    type: string
                  name:
                    default: coredns
                    type: string
                type: object
              corednsDeployment:
                description: corednsDeployment specifies the CoreDNS deployment type
                  and name or labels
                properties:
                  name:
                    description: name specifies the name of the CoreDNS resource.
                      This field is optional if Type is Pod and a LabelSelector is
                      specified.
                    type: string
                  type:
                    description: type of the CoreDNS resource (e.g., Deployment, StatefulSet,
                      DaemonSet, ReplicaSet, Pod)
                    enum:
                    - Deployment
                    - StatefulSet
                    - DaemonSet
                    type: string
                  zonefilesMountDir:
                    default: /opt/coredns
                    description: zonefilesMountDir specifies the mountPath for zonefiles.
                      Default value is /opt/coredns.
                    pattern: ^(/[^/]+)+$
                    type: string
                required:
                - type
                type: object
              corednsZoneEnaledPlugins:
                description: 'corednsZoneEnaledPlugins is list of enabled coredns
                  plugins. https://coredns.io/plugins. The most useful plugins are:
                  errors - prints errors to stdout; log - prints queries to stdout.'
                items:
                  type: string
                type: array
              waitForUpdateTimeout:
                default: 300
                description: waitForUpdateTimeout specifies how long the DNSConnector
                  for coredns to complete update. if coredns deployment haven't complete
                  the update, the controller will perform rollback. The default value
                  is 300 seconds (5 min)
                type: integer
            required:
            - corednsCM
            - corednsDeployment
            - waitForUpdateTimeout
            type: object
          status:
            description: DNSConnectorStatus defines the observed state of DNSConnector
            properties:
              conditions:
                description: conditions indidicate the status of a DNSZone.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              provisionedZones:
                description: provisionedZones maps domain names to their serial numbers.
                items:
                  description: ProvisionedDNSZone used to display the status of the
                    zones provisioned to the Coredns
                  properties:
                    domain:
                      type: string
                    name:
                      type: string
                    serialNumber:
                      type: string
                  required:
                  - domain
                  - name
                  - serialNumber
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
